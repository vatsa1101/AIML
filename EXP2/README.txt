The environment for this experiment consists of a 4-lane highway and the surrounding vehicles, all the vehicles on either sides and rear are ignored, only the vehicles ahead of the agent are considered. The initial position of the vehicle is in the left lane assuming it has just started. The agent is considered as the root node and the empty lanes ahead as the child nodes. When all the lanes are full the agent does not change lanes and maintains the same speed moves ahead in the same lane. When there are empty lanes, using DFS the agent selects the first empty lane it finds and increases speed and changes lanes and continues in the same. Using BFS, the agent goes through all the empty lanes and selects the lane which has minimum cost i.e. which is the closest and would take minimum time to reach. The agent then increases speed and changes lane and continues in the same. This environment is restricted for only straight roads, uniform speed for other vehicles and 4 lanes in this case but can be done for any number of lanes also there is no case that covers accidents as the agent does not change lanes unless it finds an empty lane. The environment also assumes that the roads have a proper divider and the agent only detects vehicles and lanes on the side of the divider where it is present. I implemented BFS algorithm for this agent. One challenge we faced in this experiment was how we could demonstrate our agent in such a way that would replicate its real life behaviour. We searched on the web and we came across Turtle which is a python library for creating pictures and shapes with the help of virtual canvas. We saw a lot of videos on how to use turtle and then we used turtle to demonstrate our agent in a much better way.

Youtube link:
https://youtu.be/GfgbkY9QCAQ
